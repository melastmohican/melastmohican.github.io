<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ssl on melastmohican.github.io</title>
    <link>https://melastmohican.github.io/tags/ssl/</link>
    <description>Recent content in ssl on melastmohican.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Mar 2020 21:35:50 -0700</lastBuildDate><atom:link href="https://melastmohican.github.io/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Convert Kafka JKS certificate to PEM</title>
      <link>https://melastmohican.github.io/posts/convert_kafka_jks_certificate_to_pem/</link>
      <pubDate>Sat, 14 Mar 2020 21:35:50 -0700</pubDate>
      
      <guid>https://melastmohican.github.io/posts/convert_kafka_jks_certificate_to_pem/</guid>
      <description>Intro Kafka supports encryption and authentication via SSL. However, the generated certificates are in Java KeyStore (JKS) format so if you need to use them in other language you need to convert them to X.509 format (.pem â€“ Privacy-enhanced Electronic Mail).
Here are the commands to extract the Certificate Authority (CA) certificate:
$ keytool -importkeystore -srckeystore dev.client.truststore.jks -destkeystore server.p12 -deststoretype PKCS12 $ openssl pkcs12 -in server.p12 -nokeys -out ca_cert.pem You can then convert your client keystore to be usable from languages supporting .</description>
    </item>
    
  </channel>
</rss>
